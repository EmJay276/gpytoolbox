name: Unit Tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  example-1:
    name: Ex1 (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: [ "3.7" ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda info
          conda install numpy
          conda install -c conda-forge igl
          conda install -c conda-forge matplotlib 
          python -m pip install --upgrade pip
          python -m pip install polyscope
          python -m pip install tetgen
          python -m pip install scikit-image
          conda install -c conda-forge scikit-sparse
        - if: matrix.os == 'ubuntu-latest'
          run: |
          sudo apt-get install libmpfr-dev libmpfr-doc libmpfr4 libmpfr4-dbg
      - name: Install c++ bindings
        shell: bash -l {0}
        run: |
          mkdir build
          cd build
          cmake ..
          make -j8
          cd .. 
      - name: Run unit tests
        shell: bash -l {0}
        run: |
          python -m unittest -v
